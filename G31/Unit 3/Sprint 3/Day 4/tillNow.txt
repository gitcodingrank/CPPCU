Object Oriented Programming:
1. Members
2. Type Conversions
3. Overloading
4. Features:
    4.1 Encapsulation
    4.2 Inheritance
    4.3 Polymorphism - 1. Compiler, 2. Run Time
    4.4 Abstraction
Before Abstraction:

Student Task: Banking System

Task Description:

Create a Bank Account system using C++ encapsulation where:

1. The account balance is private and cannot be accessed directly.
2. Users can deposit money, but only if the amount is positive.
3. Users can withdraw money, but only if they have sufficient balance.
4. The system should display the account holder's name and balance.

📝 Task Requirements

- Use a class named `BankAccount` with private variables:
    - `accountHolder` (string)
    - `balance` (double)
- Implement getter and setter functions:
    - `deposit(double amount)` → Adds money if amount > 0
    - `withdraw(double amount)` → Deducts money if balance is sufficient
    - `getBalance()` → Returns the account balance
- Create a menu-driven program to interact with the user.


✅ Expected Output

Welcome to the Bank System!

Enter Account Holder Name: Alice

Choose an option:
1. Deposit Money
2. Withdraw Money
3. Check Balance
4. Exit

Enter choice: 1
Enter deposit amount: 500
Deposit Successful!

Enter choice: 2
Enter withdrawal amount: 200
Withdrawal Successful!

Enter choice: 3
Current Balance: 300

Enter choice: 4
Thank you for using our Bank System!

🧠 Bonus Challenge

1. Implement multiple accounts.
2. Add a PIN system for security.
3. Display transaction history.

Expected Output:
Enter the number of bank accounts to create: 2

Enter details for Account 1
Account Holder Name: Rakesh 
Enter Initial Balance: 200
Set a 4-digit PIN: 1234

Enter details for Account 2
Account Holder Name: Pawan
Enter Initial Balance: 0
Set a 4-digit PIN: 12345

Select an account (1-2): 1
Enter PIN: 12345
Incorrect PIN! Try again.

Select an account (1-2): 1
Enter PIN: 1234

Choose an option:
1. Deposit Money
2. Withdraw Money
3. Check Balance
4. Show Transaction History
5. Switch Account
6. Exit
Enter choice: 1
Enter deposit amount: 300
Deposit Successful! New Balance: $500

Choose an option:
1. Deposit Money
2. Withdraw Money
3. Check Balance
4. Show Transaction History
5. Switch Account
6. Exit
Enter choice: 3
Current Balance: $500

Choose an option:
1. Deposit Money
2. Withdraw Money
3. Check Balance
4. Show Transaction History
5. Switch Account
6. Exit
Enter choice: 4

Transaction History for Rakesh:
Deposited: $300.000000

Choose an option:
1. Deposit Money
2. Withdraw Money
3. Check Balance
4. Show Transaction History
5. Switch Account
6. Exit
Enter choice: 2
Enter withdrawal amount: 100
Withdrawal Successful! New Balance: $400

Choose an option:
1. Deposit Money
2. Withdraw Money
3. Check Balance
4. Show Transaction History
5. Switch Account
6. Exit
Enter choice: 2
Enter withdrawal amount: 100
Withdrawal Successful! New Balance: $300

Choose an option:
1. Deposit Money
2. Withdraw Money
3. Check Balance
4. Show Transaction History
5. Switch Account
6. Exit
Enter choice: 4

Transaction History for Rakesh:
Deposited: $300.000000
Withdrew: $100.000000
Withdrew: $100.000000

Choose an option:
1. Deposit Money
2. Withdraw Money
3. Check Balance
4. Show Transaction History
5. Switch Account
6. Exit
Enter choice: 5
Switching account...

Select an account (1-2): 2
Enter PIN: 123456
Incorrect PIN! Try again.

Select an account (1-2): 2
Enter PIN: 12345

Choose an option:
1. Deposit Money
2. Withdraw Money
3. Check Balance
4. Show Transaction History
5. Switch Account
6. Exit
Enter choice: 6
Thank you for using our Bank System!